id: callback
version: '1.0'
expressionLang: jsonpath
name: Workflow Callback example
description: An example of how to use callback state
start: start
events:
- name: moveEvent
  source: ''
  type: move
functions:
- name: publishMove
  metadata:
    interface: org.kie.kogito.examples.PublishService
    operation: publishMove
    type: service
- name: printMessage
  metadata:
    type: sysout
- name: injectPI
  metadata:
    type: script
states:
- name: start
  type: operation
  actions:
  - functionRef:
      refName: injectPI
      arguments:
        script: kcontext.setVariable ("workflowdata", new com.fasterxml.jackson.databind.ObjectMapper().createObjectNode().put("eventId",kcontext.getProcessInstance().getStringId()));
  transition: addInfo
- name: addInfo
  type: inject
  data: 
    hello: "Is it me youre looking for"    
# want to call pets, get data, send data in event, call pets again with new event data  
  transition: waitForEvent
- name: waitForEvent
  type: callback
  action:
    name: publishAction
    functionRef:
      refName: publishMove
      arguments:
        workflowData: $.eventId
  eventRef: moveEvent
  transition: finish
- name: finish
  type: operation
  actions:
  - name: printAction
    functionRef:
      refName: printMessage
      arguments:
        message: "$.move"
  end:
    terminate: true